//[VERTEX SHADER]
#version 330 core
layout(location = 0) in vec4 position;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec4 col;
layout(location = 3) in vec2 TexCoord;
layout(location = 4) in float Blend;

out VERTEXOUT{
	vec4 Color;
	vec3 FragPos;
	vec3 Normal;
	vec2 TexCoord;
	float Blend;
}vertexout;

uniform mat4 ModelMatrix;
uniform mat4 ViewMatrix;
uniform mat4 ProjectionMatrix;
uniform bool reverse_normals;

void main(){
    gl_Position = ProjectionMatrix * ViewMatrix * ModelMatrix * position;
    
    vertexout.Color = col;
	vertexout.FragPos = (ModelMatrix * position).xyz;
	
	vertexout.TexCoord = TexCoord;
	vertexout.Blend = Blend;
	
    if(reverse_normals) // a slight hack to make sure the outer large cube displays lighting from the 'inside' instead of the default 'outside'.
        vertexout.Normal = mat3(transpose(inverse(ModelMatrix))) * (-1.0 * normal);
    else
        vertexout.Normal = mat3(transpose(inverse(ModelMatrix))) * normal;
}
