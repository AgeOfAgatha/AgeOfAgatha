//[FRAGMENT SHADER]
#version 330 core

in VERTEXOUT{
    vec4 Color;
    vec3 FragPos;
    vec3 Normal;
    vec2 TexCoord;
    float Blend;
    vec4 LightFragPos;
}fragmentin;
uniform vec3 LightPosition;
uniform float FarPlane;

uniform int texture1set;
uniform sampler2D texture1;
uniform int texture2set;
uniform sampler2D texture2;

void main(){             
	// map to [0;1] range by dividing by FarPlane
	float lightDistance = length(fragmentin.FragPos.xyz - LightPosition) / FarPlane;

	// write this as modified depth
	gl_FragDepth = lightDistance;
	gl_FragDepth = gl_FragCoord.z;
}
