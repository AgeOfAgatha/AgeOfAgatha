//[FRAGMENT SHADER]
#version 330

in VERTEXOUT{
	vec4 color;
	vec3 FragPos;
	vec3 Normal;
	vec2 texcoord;
	float blend;
}fragmentin;

layout (location = 0) out vec3 WorldPosOut;
layout (location = 1) out vec3 NormalOut;
layout (location = 2) out vec3 DiffuseOut;

uniform int texture1set;
uniform sampler2D texture1;
uniform int texture2set;
uniform sampler2D texture2;

void main(){
	if (texture1set == 1 || texture2set == 1){
		if (texture1set == 1 && texture2set != 1){
			DiffuseOut = (texture(texture1, fragmentin.texcoord) * fragmentin.color).xyz;
		}
		if (texture1set != 1 && texture2set == 1){
			DiffuseOut = (texture(texture1, fragmentin.texcoord) * fragmentin.color).xyz;
		}
		if (texture1set == 1 && texture2set == 1){
			DiffuseOut = (mix(texture(texture1, fragmentin.texcoord), texture(texture2, fragmentin.texcoord), fragmentin.blend) * fragmentin.color).xyz;
		}
	}else{
		DiffuseOut = (fragmentin.color).xyz;
	}
	WorldPosOut     = fragmentin.FragPos;
	NormalOut       = normalize(fragmentin.Normal);
}
