//[VERTEX SHADER]
#version 330 core
layout(location = 0) in vec4 position;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec4 col;
layout(location = 3) in vec2 TexCoord;
layout(location = 4) in float Blend;

out VERTEXOUT{
	vec4 color;
	vec3 lightPos;
	vec3 FragPos;
	vec3 Normal;
	vec2 texcoord;
	float blend;
}vertexout;

uniform mat4 ModelMatrix;
uniform mat4 ViewMatrix;
uniform mat4 ProjectionMatrix;

uniform vec3 LightPosition;

void main(){
	gl_Position = ProjectionMatrix * ViewMatrix * ModelMatrix * position;

	vertexout.color = col;
	vertexout.lightPos = LightPosition;
	vertexout.FragPos = (ModelMatrix * position).xyz;
	vertexout.Normal = mat3(transpose(inverse(ModelMatrix))) * normal;
	vertexout.texcoord = TexCoord;
	vertexout.blend = Blend;
}